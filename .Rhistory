all_asv_data %>%
mutate(lake = substr(file_path, 1, 3),
year = substr(file_path, 5, 9),
deployment_date = substr(file_path, 11, 20))
all_asv_data %>%
mutate(lake = substr(file_path, 1, 3),
year = substr(file_path, 5, 8),
deployment_date = substr(file_path, 10, 19))
#grab lake, year, dep date
all_asv_data <- all_asv_data %>%
mutate(lake = substr(file_path, 1, 3),
year = substr(file_path, 5, 8),
deployment_date = substr(file_path, 10, 19))
View(deployment_date_list)
View(all_asv_data)
write.csv(all_asv_data, file.path(dump_dir, paste0('ASV_raw_data_allmissions_v', Sys.Date(), '.csv'), row.names = F)
write.csv(all_asv_data, file.path(dump_dir, paste0('ASV_raw_data_allmissions_v', Sys.Date(), '.csv')), row.names = F)
#remove file names that have already been collated
list.files(dump_dir)
names(all_asv_data)
colnames <- names(all_asv_data)
#make list of column names
column_names <- names(all_asv_data)
as.data.frame(column_names)
View(all_asv_data)
View(all_asv_data)
View(all_asv_data)
test <- column_names %>%
select(-YYMMDD, -HHMMSS, -MMDDYY) %>%
mutate(CV_name_unit = case_when(column_names == 'gps_timestamp' | column_names == 'gpsspeed_timestamp' ~ 'timestamp_gps_ns',
column_names == 'latitude' ~ 'latitude_deg',
column_names == 'longitude' ~ 'longitude_deg',
column_names == 'compass_timestamp' ~ 'timestamp_compass_ns',
column_names == 'heading' ~ 'heading_deg',
column_names == 'airspeed_timestamp' ~ 'timestamp_airspeed_ns',
column_names == 'airspeed' ~ 'airspeed_mps',
column_names == 'sonar_timestamp' ~ 'timestamp_sonar_ns',
column_names == 'distance' | column_names == 'sonar' ~ 'distance', # need definition
column_names == 'gps_velocity_timestamp' ~ 'timestamp_gpsvelocity_ns',
column_names == 'gps_linear_x' ~ '',
column_names == 'gps_linear_y' ~ '',
column_names == 'local_velocity_timestamp' ~ 'timestamp_localvelocity_ns',
column_names == 'local_linear_x'| column_names == 'pose.pose.position.x' ~ '',
column_names == 'local_linear_y'| column_names == 'pose.pose.position.y' ~ '',
column_names == 'local_linear_z'| column_names == 'pose.pose.position.z' ~ '',
column_names == 'local_angular_x'| column_names ==  'pose.pose.orientation.x' ~ '',
column_names == 'local_angular_y'| column_names ==  'pose.pose.orientation.y' ~ ' ',
column_names == 'local_angular_z' | column_names == 'pose.pose.orientation.z' ~ ' ',
column_names == 'local_angular_z' | column_names == 'pose.pose.orientation.w' ~ ' ',
column_names == 'sonde_timestamp' ~ 'timestamp_sonde_ns',
column_names == 'Battery.V' ~ 'batteryVoltage_V',
column_names == 'Temp.Â.C' | column_names == 'Temp..C' ~ 'temperatureWater_degC',
column_names == 'Depth.m' |column_names == 'Depth..m' ~ 'depthSensor_sonde_m',
column_names == 'Cond.ÂµS.cm'| column_names == 'Cond.µS.cm' ~ 'electricalConductivity_uscm',
column_names == 'SpCond.mS.cm' ~ 'specificConductance_mscm',
column_names == 'SpCond.ÂµS.cm'| column_names ==  'SpCond.µS.cm' ~ 'specificConductance_uscm',
column_names == 'Chlorophyll.RFU' | column_names == 'Chlorophyll..µg.L' ~  'chlorophyll_a_RFU',
column_names == 'ODO...sat' ~ 'oxygenDissolved_perc',
column_names == 'ODO.mg.L' ~ 'oxygenDissolved_mgl',
column_names == 'Turbidity.NTU' ~ 'turbidity_NTU',
column_names == 'Salinity.PPT' ~ 'salinity_PPT',
column_names == 'BGA.PC.µg.L' ~ 'blue_GreenAlgae_Cyanobacteria_Phycocyanin_ugl',
column_names == 'TSS.mg.L' ~ 'solidsTotalSuspended_mgl',
column_names == 'Wiper.Position.V' ~ '',
TRUE ~ '!'
))
test <- column_names %>%
select(-'YYMMDD', -'HHMMSS', -'MMDDYY') %>%
mutate(CV_name_unit = case_when(column_names == 'gps_timestamp' | column_names == 'gpsspeed_timestamp' ~ 'timestamp_gps_ns',
column_names == 'latitude' ~ 'latitude_deg',
column_names == 'longitude' ~ 'longitude_deg',
column_names == 'compass_timestamp' ~ 'timestamp_compass_ns',
column_names == 'heading' ~ 'heading_deg',
column_names == 'airspeed_timestamp' ~ 'timestamp_airspeed_ns',
column_names == 'airspeed' ~ 'airspeed_mps',
column_names == 'sonar_timestamp' ~ 'timestamp_sonar_ns',
column_names == 'distance' | column_names == 'sonar' ~ 'distance', # need definition
column_names == 'gps_velocity_timestamp' ~ 'timestamp_gpsvelocity_ns',
column_names == 'gps_linear_x' ~ '',
column_names == 'gps_linear_y' ~ '',
column_names == 'local_velocity_timestamp' ~ 'timestamp_localvelocity_ns',
column_names == 'local_linear_x'| column_names == 'pose.pose.position.x' ~ '',
column_names == 'local_linear_y'| column_names == 'pose.pose.position.y' ~ '',
column_names == 'local_linear_z'| column_names == 'pose.pose.position.z' ~ '',
column_names == 'local_angular_x'| column_names ==  'pose.pose.orientation.x' ~ '',
column_names == 'local_angular_y'| column_names ==  'pose.pose.orientation.y' ~ ' ',
column_names == 'local_angular_z' | column_names == 'pose.pose.orientation.z' ~ ' ',
column_names == 'local_angular_z' | column_names == 'pose.pose.orientation.w' ~ ' ',
column_names == 'sonde_timestamp' ~ 'timestamp_sonde_ns',
column_names == 'Battery.V' ~ 'batteryVoltage_V',
column_names == 'Temp.Â.C' | column_names == 'Temp..C' ~ 'temperatureWater_degC',
column_names == 'Depth.m' |column_names == 'Depth..m' ~ 'depthSensor_sonde_m',
column_names == 'Cond.ÂµS.cm'| column_names == 'Cond.µS.cm' ~ 'electricalConductivity_uscm',
column_names == 'SpCond.mS.cm' ~ 'specificConductance_mscm',
column_names == 'SpCond.ÂµS.cm'| column_names ==  'SpCond.µS.cm' ~ 'specificConductance_uscm',
column_names == 'Chlorophyll.RFU' | column_names == 'Chlorophyll..µg.L' ~  'chlorophyll_a_RFU',
column_names == 'ODO...sat' ~ 'oxygenDissolved_perc',
column_names == 'ODO.mg.L' ~ 'oxygenDissolved_mgl',
column_names == 'Turbidity.NTU' ~ 'turbidity_NTU',
column_names == 'Salinity.PPT' ~ 'salinity_PPT',
column_names == 'BGA.PC.µg.L' ~ 'blue_GreenAlgae_Cyanobacteria_Phycocyanin_ugl',
column_names == 'TSS.mg.L' ~ 'solidsTotalSuspended_mgl',
column_names == 'Wiper.Position.V' ~ '',
TRUE ~ '!'
))
test <- column_names %>%
dplyr::select(-'YYMMDD', -'HHMMSS', -'MMDDYY') %>%
mutate(CV_name_unit = case_when(column_names == 'gps_timestamp' | column_names == 'gpsspeed_timestamp' ~ 'timestamp_gps_ns',
column_names == 'latitude' ~ 'latitude_deg',
column_names == 'longitude' ~ 'longitude_deg',
column_names == 'compass_timestamp' ~ 'timestamp_compass_ns',
column_names == 'heading' ~ 'heading_deg',
column_names == 'airspeed_timestamp' ~ 'timestamp_airspeed_ns',
column_names == 'airspeed' ~ 'airspeed_mps',
column_names == 'sonar_timestamp' ~ 'timestamp_sonar_ns',
column_names == 'distance' | column_names == 'sonar' ~ 'distance', # need definition
column_names == 'gps_velocity_timestamp' ~ 'timestamp_gpsvelocity_ns',
column_names == 'gps_linear_x' ~ '',
column_names == 'gps_linear_y' ~ '',
column_names == 'local_velocity_timestamp' ~ 'timestamp_localvelocity_ns',
column_names == 'local_linear_x'| column_names == 'pose.pose.position.x' ~ '',
column_names == 'local_linear_y'| column_names == 'pose.pose.position.y' ~ '',
column_names == 'local_linear_z'| column_names == 'pose.pose.position.z' ~ '',
column_names == 'local_angular_x'| column_names ==  'pose.pose.orientation.x' ~ '',
column_names == 'local_angular_y'| column_names ==  'pose.pose.orientation.y' ~ ' ',
column_names == 'local_angular_z' | column_names == 'pose.pose.orientation.z' ~ ' ',
column_names == 'local_angular_z' | column_names == 'pose.pose.orientation.w' ~ ' ',
column_names == 'sonde_timestamp' ~ 'timestamp_sonde_ns',
column_names == 'Battery.V' ~ 'batteryVoltage_V',
column_names == 'Temp.Â.C' | column_names == 'Temp..C' ~ 'temperatureWater_degC',
column_names == 'Depth.m' |column_names == 'Depth..m' ~ 'depthSensor_sonde_m',
column_names == 'Cond.ÂµS.cm'| column_names == 'Cond.µS.cm' ~ 'electricalConductivity_uscm',
column_names == 'SpCond.mS.cm' ~ 'specificConductance_mscm',
column_names == 'SpCond.ÂµS.cm'| column_names ==  'SpCond.µS.cm' ~ 'specificConductance_uscm',
column_names == 'Chlorophyll.RFU' | column_names == 'Chlorophyll..µg.L' ~  'chlorophyll_a_RFU',
column_names == 'ODO...sat' ~ 'oxygenDissolved_perc',
column_names == 'ODO.mg.L' ~ 'oxygenDissolved_mgl',
column_names == 'Turbidity.NTU' ~ 'turbidity_NTU',
column_names == 'Salinity.PPT' ~ 'salinity_PPT',
column_names == 'BGA.PC.µg.L' ~ 'blue_GreenAlgae_Cyanobacteria_Phycocyanin_ugl',
column_names == 'TSS.mg.L' ~ 'solidsTotalSuspended_mgl',
column_names == 'Wiper.Position.V' ~ '',
TRUE ~ '!'
))
column_names <- as.data.frame(column_names)
test <- column_names %>%
select(-YYMMDD, -HHMMSS, -MMDDYY) %>%
mutate(CV_name_unit = case_when(column_names == 'gps_timestamp' | column_names == 'gpsspeed_timestamp' ~ 'timestamp_gps_ns',
column_names == 'latitude' ~ 'latitude_deg',
column_names == 'longitude' ~ 'longitude_deg',
column_names == 'compass_timestamp' ~ 'timestamp_compass_ns',
column_names == 'heading' ~ 'heading_deg',
column_names == 'airspeed_timestamp' ~ 'timestamp_airspeed_ns',
column_names == 'airspeed' ~ 'airspeed_mps',
column_names == 'sonar_timestamp' ~ 'timestamp_sonar_ns',
column_names == 'distance' | column_names == 'sonar' ~ 'distance', # need definition
column_names == 'gps_velocity_timestamp' ~ 'timestamp_gpsvelocity_ns',
column_names == 'gps_linear_x' ~ '',
column_names == 'gps_linear_y' ~ '',
column_names == 'local_velocity_timestamp' ~ 'timestamp_localvelocity_ns',
column_names == 'local_linear_x'| column_names == 'pose.pose.position.x' ~ '',
column_names == 'local_linear_y'| column_names == 'pose.pose.position.y' ~ '',
column_names == 'local_linear_z'| column_names == 'pose.pose.position.z' ~ '',
column_names == 'local_angular_x'| column_names ==  'pose.pose.orientation.x' ~ '',
column_names == 'local_angular_y'| column_names ==  'pose.pose.orientation.y' ~ ' ',
column_names == 'local_angular_z' | column_names == 'pose.pose.orientation.z' ~ ' ',
column_names == 'local_angular_z' | column_names == 'pose.pose.orientation.w' ~ ' ',
column_names == 'sonde_timestamp' ~ 'timestamp_sonde_ns',
column_names == 'Battery.V' ~ 'batteryVoltage_V',
column_names == 'Temp.Â.C' | column_names == 'Temp..C' ~ 'temperatureWater_degC',
column_names == 'Depth.m' |column_names == 'Depth..m' ~ 'depthSensor_sonde_m',
column_names == 'Cond.ÂµS.cm'| column_names == 'Cond.µS.cm' ~ 'electricalConductivity_uscm',
column_names == 'SpCond.mS.cm' ~ 'specificConductance_mscm',
column_names == 'SpCond.ÂµS.cm'| column_names ==  'SpCond.µS.cm' ~ 'specificConductance_uscm',
column_names == 'Chlorophyll.RFU' | column_names == 'Chlorophyll..µg.L' ~  'chlorophyll_a_RFU',
column_names == 'ODO...sat' ~ 'oxygenDissolved_perc',
column_names == 'ODO.mg.L' ~ 'oxygenDissolved_mgl',
column_names == 'Turbidity.NTU' ~ 'turbidity_NTU',
column_names == 'Salinity.PPT' ~ 'salinity_PPT',
column_names == 'BGA.PC.µg.L' ~ 'blue_GreenAlgae_Cyanobacteria_Phycocyanin_ugl',
column_names == 'TSS.mg.L' ~ 'solidsTotalSuspended_mgl',
column_names == 'Wiper.Position.V' ~ '',
TRUE ~ '!'
))
test <- column_names %>%
select(-'YYMMDD', -'HHMMSS', -'MMDDYY') %>%
mutate(CV_name_unit = case_when(column_names == 'gps_timestamp' | column_names == 'gpsspeed_timestamp' ~ 'timestamp_gps_ns',
column_names == 'latitude' ~ 'latitude_deg',
column_names == 'longitude' ~ 'longitude_deg',
column_names == 'compass_timestamp' ~ 'timestamp_compass_ns',
column_names == 'heading' ~ 'heading_deg',
column_names == 'airspeed_timestamp' ~ 'timestamp_airspeed_ns',
column_names == 'airspeed' ~ 'airspeed_mps',
column_names == 'sonar_timestamp' ~ 'timestamp_sonar_ns',
column_names == 'distance' | column_names == 'sonar' ~ 'distance', # need definition
column_names == 'gps_velocity_timestamp' ~ 'timestamp_gpsvelocity_ns',
column_names == 'gps_linear_x' ~ '',
column_names == 'gps_linear_y' ~ '',
column_names == 'local_velocity_timestamp' ~ 'timestamp_localvelocity_ns',
column_names == 'local_linear_x'| column_names == 'pose.pose.position.x' ~ '',
column_names == 'local_linear_y'| column_names == 'pose.pose.position.y' ~ '',
column_names == 'local_linear_z'| column_names == 'pose.pose.position.z' ~ '',
column_names == 'local_angular_x'| column_names ==  'pose.pose.orientation.x' ~ '',
column_names == 'local_angular_y'| column_names ==  'pose.pose.orientation.y' ~ ' ',
column_names == 'local_angular_z' | column_names == 'pose.pose.orientation.z' ~ ' ',
column_names == 'local_angular_z' | column_names == 'pose.pose.orientation.w' ~ ' ',
column_names == 'sonde_timestamp' ~ 'timestamp_sonde_ns',
column_names == 'Battery.V' ~ 'batteryVoltage_V',
column_names == 'Temp.Â.C' | column_names == 'Temp..C' ~ 'temperatureWater_degC',
column_names == 'Depth.m' |column_names == 'Depth..m' ~ 'depthSensor_sonde_m',
column_names == 'Cond.ÂµS.cm'| column_names == 'Cond.µS.cm' ~ 'electricalConductivity_uscm',
column_names == 'SpCond.mS.cm' ~ 'specificConductance_mscm',
column_names == 'SpCond.ÂµS.cm'| column_names ==  'SpCond.µS.cm' ~ 'specificConductance_uscm',
column_names == 'Chlorophyll.RFU' | column_names == 'Chlorophyll..µg.L' ~  'chlorophyll_a_RFU',
column_names == 'ODO...sat' ~ 'oxygenDissolved_perc',
column_names == 'ODO.mg.L' ~ 'oxygenDissolved_mgl',
column_names == 'Turbidity.NTU' ~ 'turbidity_NTU',
column_names == 'Salinity.PPT' ~ 'salinity_PPT',
column_names == 'BGA.PC.µg.L' ~ 'blue_GreenAlgae_Cyanobacteria_Phycocyanin_ugl',
column_names == 'TSS.mg.L' ~ 'solidsTotalSuspended_mgl',
column_names == 'Wiper.Position.V' ~ '',
TRUE ~ '!'
))
View(column_names)
#make list of column names
column_names <- names(all_asv_data)
column_names <- as.data.frame(column_names)
test <- column_names %>%
select(-'YYMMDD', -'HHMMSS', -'MMDDYY') %>%
mutate(CV_name_unit = case_when(column_names == 'gps_timestamp' | column_names == 'gpsspeed_timestamp' ~ 'timestamp_gps_ns',
column_names == 'latitude' ~ 'latitude_deg',
column_names == 'longitude' ~ 'longitude_deg',
column_names == 'compass_timestamp' ~ 'timestamp_compass_ns',
column_names == 'heading' ~ 'heading_deg',
column_names == 'airspeed_timestamp' ~ 'timestamp_airspeed_ns',
column_names == 'airspeed' ~ 'airspeed_mps',
column_names == 'sonar_timestamp' ~ 'timestamp_sonar_ns',
column_names == 'distance' | column_names == 'sonar' ~ 'distance', # need definition
column_names == 'gps_velocity_timestamp' ~ 'timestamp_gpsvelocity_ns',
column_names == 'gps_linear_x' ~ '',
column_names == 'gps_linear_y' ~ '',
column_names == 'local_velocity_timestamp' ~ 'timestamp_localvelocity_ns',
column_names == 'local_linear_x'| column_names == 'pose.pose.position.x' ~ '',
column_names == 'local_linear_y'| column_names == 'pose.pose.position.y' ~ '',
column_names == 'local_linear_z'| column_names == 'pose.pose.position.z' ~ '',
column_names == 'local_angular_x'| column_names ==  'pose.pose.orientation.x' ~ '',
column_names == 'local_angular_y'| column_names ==  'pose.pose.orientation.y' ~ ' ',
column_names == 'local_angular_z' | column_names == 'pose.pose.orientation.z' ~ ' ',
column_names == 'local_angular_z' | column_names == 'pose.pose.orientation.w' ~ ' ',
column_names == 'sonde_timestamp' ~ 'timestamp_sonde_ns',
column_names == 'Battery.V' ~ 'batteryVoltage_V',
column_names == 'Temp.Â.C' | column_names == 'Temp..C' ~ 'temperatureWater_degC',
column_names == 'Depth.m' |column_names == 'Depth..m' ~ 'depthSensor_sonde_m',
column_names == 'Cond.ÂµS.cm'| column_names == 'Cond.µS.cm' ~ 'electricalConductivity_uscm',
column_names == 'SpCond.mS.cm' ~ 'specificConductance_mscm',
column_names == 'SpCond.ÂµS.cm'| column_names ==  'SpCond.µS.cm' ~ 'specificConductance_uscm',
column_names == 'Chlorophyll.RFU' | column_names == 'Chlorophyll..µg.L' ~  'chlorophyll_a_RFU',
column_names == 'ODO...sat' ~ 'oxygenDissolved_perc',
column_names == 'ODO.mg.L' ~ 'oxygenDissolved_mgl',
column_names == 'Turbidity.NTU' ~ 'turbidity_NTU',
column_names == 'Salinity.PPT' ~ 'salinity_PPT',
column_names == 'BGA.PC.µg.L' ~ 'blue_GreenAlgae_Cyanobacteria_Phycocyanin_ugl',
column_names == 'TSS.mg.L' ~ 'solidsTotalSuspended_mgl',
column_names == 'Wiper.Position.V' ~ '',
TRUE ~ '!'
))
#make list of column names
column_names <- names(all_asv_data)
column_names <- as.data.frame(column_names)
#make list of column names
column_names <- names(all_asv_data)
column_names <- as.data.frame(column_names)
test <- column_names %>%
mutate(CV_name_unit = case_when(column_names == 'gps_timestamp' | column_names == 'gpsspeed_timestamp' ~ 'timestamp_gps_ns',
column_names == 'latitude' ~ 'latitude_deg',
column_names == 'longitude' ~ 'longitude_deg',
column_names == 'compass_timestamp' ~ 'timestamp_compass_ns',
column_names == 'heading' ~ 'heading_deg',
column_names == 'airspeed_timestamp' ~ 'timestamp_airspeed_ns',
column_names == 'airspeed' ~ 'airspeed_mps',
column_names == 'sonar_timestamp' ~ 'timestamp_sonar_ns',
column_names == 'distance' | column_names == 'sonar' ~ 'distance', # need definition
column_names == 'gps_velocity_timestamp' ~ 'timestamp_gpsvelocity_ns',
column_names == 'gps_linear_x' ~ '',
column_names == 'gps_linear_y' ~ '',
column_names == 'local_velocity_timestamp' ~ 'timestamp_localvelocity_ns',
column_names == 'local_linear_x'| column_names == 'pose.pose.position.x' ~ '',
column_names == 'local_linear_y'| column_names == 'pose.pose.position.y' ~ '',
column_names == 'local_linear_z'| column_names == 'pose.pose.position.z' ~ '',
column_names == 'local_angular_x'| column_names ==  'pose.pose.orientation.x' ~ '',
column_names == 'local_angular_y'| column_names ==  'pose.pose.orientation.y' ~ ' ',
column_names == 'local_angular_z' | column_names == 'pose.pose.orientation.z' ~ ' ',
column_names == 'local_angular_z' | column_names == 'pose.pose.orientation.w' ~ ' ',
column_names == 'sonde_timestamp' ~ 'timestamp_sonde_ns',
column_names == 'Battery.V' ~ 'batteryVoltage_V',
column_names == 'Temp.Â.C' | column_names == 'Temp..C' ~ 'temperatureWater_degC',
column_names == 'Depth.m' |column_names == 'Depth..m' ~ 'depthSensor_sonde_m',
column_names == 'Cond.ÂµS.cm'| column_names == 'Cond.µS.cm' ~ 'electricalConductivity_uscm',
column_names == 'SpCond.mS.cm' ~ 'specificConductance_mscm',
column_names == 'SpCond.ÂµS.cm'| column_names ==  'SpCond.µS.cm' ~ 'specificConductance_uscm',
column_names == 'Chlorophyll.RFU' | column_names == 'Chlorophyll..µg.L' ~  'chlorophyll_a_RFU',
column_names == 'ODO...sat' ~ 'oxygenDissolved_perc',
column_names == 'ODO.mg.L' ~ 'oxygenDissolved_mgl',
column_names == 'Turbidity.NTU' ~ 'turbidity_NTU',
column_names == 'Salinity.PPT' ~ 'salinity_PPT',
column_names == 'BGA.PC.µg.L' ~ 'blue_GreenAlgae_Cyanobacteria_Phycocyanin_ugl',
column_names == 'TSS.mg.L' ~ 'solidsTotalSuspended_mgl',
column_names == 'Wiper.Position.V' ~ '',
TRUE ~ '!'
))
View(test)
test <- column_names %>%
mutate(CV_name_unit = case_when(column_names == 'gps_timestamp' | column_names == 'gpsspeed_timestamp' ~ 'timestamp_gps_ns',
column_names == 'latitude' ~ 'latitude_deg',
column_names == 'longitude' ~ 'longitude_deg',
column_names == 'compass_timestamp' ~ 'timestamp_compass_ns',
column_names == 'heading' ~ 'heading_deg',
column_names == 'airspeed_timestamp' ~ 'timestamp_airspeed_ns',
column_names == 'airspeed' ~ 'airspeed_mps',
column_names == 'sonar_timestamp' ~ 'timestamp_sonar_ns',
column_names == 'distance' | column_names == 'sonar' ~ 'distance', # need definition
column_names == 'gps_velocity_timestamp' ~ 'timestamp_gpsvelocity_ns',
column_names == 'gps_linear_x' ~ '',
column_names == 'gps_linear_y' ~ '',
column_names == 'local_velocity_timestamp' ~ 'timestamp_localvelocity_ns',
column_names == 'local_linear_x'| column_names == 'pose.pose.position.x' ~ '',
column_names == 'local_linear_y'| column_names == 'pose.pose.position.y' ~ '',
column_names == 'local_linear_z'| column_names == 'pose.pose.position.z' ~ '',
column_names == 'local_angular_x'| column_names ==  'pose.pose.orientation.x' ~ '',
column_names == 'local_angular_y'| column_names ==  'pose.pose.orientation.y' ~ ' ',
column_names == 'local_angular_z' | column_names == 'pose.pose.orientation.z' ~ ' ',
column_names == 'local_angular_z' | column_names == 'pose.pose.orientation.w' ~ ' ',
column_names == 'sonde_timestamp' ~ 'timestamp_sonde_ns',
column_names == 'Battery.V' ~ 'batteryVoltage_V',
column_names == 'Temp.Â.C' | column_names == 'Temp..C' ~ 'temperatureWater_degC',
column_names == 'Depth.m' |column_names == 'Depth..m' ~ 'depthSensor_sonde_m',
column_names == 'Cond.ÂµS.cm'| column_names == 'Cond.µS.cm' ~ 'electricalConductivity_uscm',
column_names == 'SpCond.mS.cm' ~ 'specificConductance_mscm',
column_names == 'SpCond.ÂµS.cm'| column_names ==  'SpCond.µS.cm' ~ 'specificConductance_uscm',
column_names == 'Chlorophyll.RFU' | column_names == 'Chlorophyll..µg.L' ~  'chlorophyll_a_RFU',
column_names == 'ODO...sat' ~ 'oxygenDissolved_perc',
column_names == 'ODO.mg.L' ~ 'oxygenDissolved_mgl',
column_names == 'Turbidity.NTU' ~ 'turbidity_NTU',
column_names == 'Salinity.PPT' ~ 'salinity_PPT',
column_names == 'BGA.PC.µg.L' ~ 'blue_GreenAlgae_Cyanobacteria_Phycocyanin_ugl',
column_names == 'TSS.mg.L' ~ 'solidsTotalSuspended_mgl',
column_names == 'Wiper.Position.V' ~ '',
TRUE ~ column_names
))
#make list of column names
column_names <- names(all_asv_data)
column_names <- as.data.frame(column_names)
column_names <- column_names %>%
mutate(CV_name_unit = case_when(column_names == 'gps_timestamp' | column_names == 'gpsspeed_timestamp' ~ 'timestamp_gps_ns',
column_names == 'latitude' ~ 'latitude_deg',
column_names == 'longitude' ~ 'longitude_deg',
column_names == 'compass_timestamp' ~ 'timestamp_compass_ns',
column_names == 'heading' ~ 'heading_deg',
column_names == 'airspeed_timestamp' ~ 'timestamp_airspeed_ns',
column_names == 'airspeed' ~ 'airspeed_mps',
column_names == 'sonar_timestamp' ~ 'timestamp_sonar_ns',
column_names == 'distance' | column_names == 'sonar' ~ 'distance', # need definition
column_names == 'gps_velocity_timestamp' ~ 'timestamp_gpsvelocity_ns',
column_names == 'gps_linear_x' ~ '',
column_names == 'gps_linear_y' ~ '',
column_names == 'local_velocity_timestamp' ~ 'timestamp_localvelocity_ns',
column_names == 'local_linear_x'| column_names == 'pose.pose.position.x' ~ '',
column_names == 'local_linear_y'| column_names == 'pose.pose.position.y' ~ '',
column_names == 'local_linear_z'| column_names == 'pose.pose.position.z' ~ '',
column_names == 'local_angular_x'| column_names ==  'pose.pose.orientation.x' ~ '',
column_names == 'local_angular_y'| column_names ==  'pose.pose.orientation.y' ~ '',
column_names == 'local_angular_z' | column_names == 'pose.pose.orientation.z' ~ '',
column_names == 'local_angular_z' | column_names == 'pose.pose.orientation.w' ~ '',
column_names == 'sonde_timestamp' ~ 'timestamp_sonde_ns',
column_names == 'Battery.V' ~ 'batteryVoltage_V',
column_names == 'Temp.Â.C' | column_names == 'Temp..C' ~ 'temperatureWater_degC',
column_names == 'Depth.m' |column_names == 'Depth..m' ~ 'depthSensor_sonde_m',
column_names == 'Cond.ÂµS.cm'| column_names == 'Cond.µS.cm' ~ 'electricalConductivity_uscm',
column_names == 'SpCond.mS.cm' ~ 'specificConductance_mscm',
column_names == 'SpCond.ÂµS.cm'| column_names ==  'SpCond.µS.cm' ~ 'specificConductance_uscm',
column_names == 'Chlorophyll.RFU' | column_names == 'Chlorophyll..µg.L' ~  'chlorophyll_a_RFU',
column_names == 'ODO...sat' ~ 'oxygenDissolved_perc',
column_names == 'ODO.mg.L' ~ 'oxygenDissolved_mgl',
column_names == 'Turbidity.NTU' ~ 'turbidity_NTU',
column_names == 'Salinity.PPT' ~ 'salinity_PPT',
column_names == 'BGA.PC.µg.L' ~ 'blue_GreenAlgae_Cyanobacteria_Phycocyanin_ugl',
column_names == 'TSS.mg.L' ~ 'solidsTotalSuspended_mgl',
column_names == 'Wiper.Position.V' ~ '',
TRUE ~ column_names))
names(all_asv_data) = column_names$CV_name_unit
View(all_asv_data)
#make list of column names
column_names <- names(all_asv_data)
column_names <- as.data.frame(column_names)
column_names <- column_names %>%
mutate(CV_name_unit = case_when(column_names == 'gps_timestamp' | column_names == 'gpsspeed_timestamp' ~ 'timestamp_gps_ns',
column_names == 'latitude' ~ 'latitude_deg',
column_names == 'longitude' ~ 'longitude_deg',
column_names == 'compass_timestamp' ~ 'timestamp_compass_ns',
column_names == 'heading' ~ 'heading_deg',
column_names == 'airspeed_timestamp' ~ 'timestamp_airspeed_ns',
column_names == 'airspeed' ~ 'airspeed_mps',
column_names == 'sonar_timestamp' ~ 'timestamp_sonar_ns',
column_names == 'distance' | column_names == 'sonar' ~ '', # need definition
column_names == 'gps_velocity_timestamp' ~ 'timestamp_gpsvelocity_ns',
column_names == 'gps_linear_x' ~ '',
column_names == 'gps_linear_y' ~ '',
column_names == 'local_velocity_timestamp' ~ 'timestamp_localvelocity_ns',
column_names == 'local_linear_x'| column_names == 'pose.pose.position.x' ~ '',
column_names == 'local_linear_y'| column_names == 'pose.pose.position.y' ~ '',
column_names == 'local_linear_z'| column_names == 'pose.pose.position.z' ~ '',
column_names == 'local_angular_x'| column_names ==  'pose.pose.orientation.x' ~ '',
column_names == 'local_angular_y'| column_names ==  'pose.pose.orientation.y' ~ '',
column_names == 'local_angular_z' | column_names == 'pose.pose.orientation.z' ~ '',
column_names == 'local_angular_z' | column_names == 'pose.pose.orientation.w' ~ '',
column_names == 'sonde_timestamp' ~ 'timestamp_sonde_ns',
column_names == 'Battery.V' ~ 'batteryVoltage_V',
column_names == 'Temp.Â.C' | column_names == 'Temp..C' ~ 'temperatureWater_degC',
column_names == 'Depth.m' |column_names == 'Depth..m' ~ 'depthSensor_sonde_m',
column_names == 'Cond.ÂµS.cm'| column_names == 'Cond.µS.cm' ~ 'electricalConductivity_uscm',
column_names == 'SpCond.mS.cm' ~ 'specificConductance_mscm',
column_names == 'SpCond.ÂµS.cm'| column_names ==  'SpCond.µS.cm' ~ 'specificConductance_uscm',
column_names == 'Chlorophyll.RFU' | column_names == 'Chlorophyll..µg.L' ~  'chlorophyll_a_RFU',
column_names == 'ODO...sat' ~ 'oxygenDissolved_perc',
column_names == 'ODO.mg.L' ~ 'oxygenDissolved_mgl',
column_names == 'Turbidity.NTU' ~ 'turbidity_NTU',
column_names == 'Salinity.PPT' ~ 'salinity_PPT',
column_names == 'BGA.PC.µg.L' ~ 'blue_GreenAlgae_Cyanobacteria_Phycocyanin_ugl',
column_names == 'TSS.mg.L' ~ 'solidsTotalSuspended_mgl',
column_names == 'Wiper.Position.V' ~ '',
TRUE ~ column_names))
names(all_asv_data) = column_names$CV_name_unit
#harmonize for multiple col name changes
all_asv_data <- all_asv_data %>%
filter(~'')
#harmonize for multiple col name changes
all_asv_data <- all_asv_data %>%
filter(~'')
#grab lake, year, dep date
all_asv_data <- all_asv_data %>%
mutate(lake = substr(file_path, 1, 3),
year = substr(file_path, 5, 8),
deployment_date = substr(file_path, 10, 19))
#make list of column names
column_names <- names(all_asv_data)
column_names <- as.data.frame(column_names)
column_names <- column_names %>%
mutate(CV_name_unit = case_when(column_names == 'gps_timestamp' | column_names == 'gpsspeed_timestamp' ~ 'timestamp_gps_ns',
column_names == 'latitude' ~ 'latitude_deg',
column_names == 'longitude' ~ 'longitude_deg',
column_names == 'compass_timestamp' ~ 'timestamp_compass_ns',
column_names == 'heading' ~ 'heading_deg',
column_names == 'airspeed_timestamp' ~ 'timestamp_airspeed_ns',
column_names == 'airspeed' ~ 'airspeed_mps',
column_names == 'sonar_timestamp' ~ 'timestamp_sonar_ns',
column_names == 'distance' | column_names == 'sonar' ~ '', # need definition
column_names == 'gps_velocity_timestamp' ~ 'timestamp_gpsvelocity_ns',
column_names == 'gps_linear_x' ~ '',
column_names == 'gps_linear_y' ~ '',
column_names == 'local_velocity_timestamp' ~ 'timestamp_localvelocity_ns',
column_names == 'local_linear_x'| column_names == 'pose.pose.position.x' ~ '',
column_names == 'local_linear_y'| column_names == 'pose.pose.position.y' ~ '',
column_names == 'local_linear_z'| column_names == 'pose.pose.position.z' ~ '',
column_names == 'local_angular_x'| column_names ==  'pose.pose.orientation.x' ~ '',
column_names == 'local_angular_y'| column_names ==  'pose.pose.orientation.y' ~ '',
column_names == 'local_angular_z' | column_names == 'pose.pose.orientation.z' ~ '',
column_names == 'local_angular_z' | column_names == 'pose.pose.orientation.w' ~ '',
column_names == 'sonde_timestamp' ~ 'timestamp_sonde_ns',
column_names == 'Battery.V' ~ 'batteryVoltage_V',
column_names == 'Temp.Â.C' | column_names == 'Temp..C' ~ 'temperatureWater_degC',
column_names == 'Depth.m' |column_names == 'Depth..m' ~ 'depthSensor_sonde_m',
column_names == 'Cond.ÂµS.cm'| column_names == 'Cond.µS.cm' ~ 'electricalConductivity_uscm',
column_names == 'SpCond.mS.cm' ~ 'specificConductance_mscm',
column_names == 'SpCond.ÂµS.cm'| column_names ==  'SpCond.µS.cm' ~ 'specificConductance_uscm',
column_names == 'Chlorophyll.RFU' | column_names == 'Chlorophyll..µg.L' ~  'chlorophyll_a_RFU',
column_names == 'ODO...sat' ~ 'oxygenDissolved_perc',
column_names == 'ODO.mg.L' ~ 'oxygenDissolved_mgl',
column_names == 'Turbidity.NTU' ~ 'turbidity_NTU',
column_names == 'Salinity.PPT' ~ 'salinity_PPT',
column_names == 'BGA.PC.µg.L' ~ 'blue_GreenAlgae_Cyanobacteria_Phycocyanin_ugl',
column_names == 'TSS.mg.L' ~ 'solidsTotalSuspended_mgl',
column_names == 'Wiper.Position.V' ~ '',
TRUE ~ column_names))
for(l in 1:length(file_list)) {
df = read.csv(file.path(lake_dir, file_list[l])) %>%
mutate(file_path = file_list[l])
print(file_list_2021[l])
if(l == 1){
all_asv_data = df
} else {
all_asv_data = full_join(all_asv_data, df)
}
}
#grab lake, year, dep date
all_asv_data <- all_asv_data %>%
mutate(lake = substr(file_path, 1, 3),
year = substr(file_path, 5, 8),
deployment_date = substr(file_path, 10, 19))
file_list <- dir(lake_dir, pattern = ('.csv'),  recursive = T)
for(l in 1:length(file_list)) {
df = read.csv(file.path(lake_dir, file_list[l])) %>%
mutate(file_path = file_list[l])
print(file_list_2021[l])
if(l == 1){
all_asv_data = df
} else {
all_asv_data = full_join(all_asv_data, df)
}
}
file_list <- dir(lake_dir, pattern = ('.csv'),  recursive = T)
lake_dir
file_list <- dir(lake_dir, pattern = ('.csv'),  recursive = T)
